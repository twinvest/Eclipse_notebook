package 수학;

import java.util.Scanner;
public class 피사노주기 {
	/*
	 * 복습을 해보면, 피보나치 수 90번째 이상으로 넘어가면 8바이트로도 표현하기가 점차 어려워진다고 하였다.
	 * 그래서 종종 이를 어떤수(K)로 나눈 나머지를 구하라고 하는데 이는 항상 일정한 주기를 갖는다.
	 * 그 이유에 대해 알아보자.
	 * 3으로 나누었을때의 주기는 8이다.
	 *
	 *
	 * n    0 1 2 3 4 5 6  7  8  9  10  11  12  13  14  15
	 * Fn   0 1 1 2 3 5 8 13 21 34  55  89 144 233 377 610
	 * Fn%3 0 1 1 2 0 2 2  1  0  1   1   2   0   2   2   1
	 *
	 * Fn%3의 더하는 조합을 보면 아래를 반복한다.
	 * (0,1) (1,1) (1,2) (2,0) (0,2) (2,2) (2,1) (1,0)
	 *
	 * 주기의 길이가 K라면,
	 * 즉, N%M == N%K이다.
	 * 이때, M = 10^k일때, k>2라면, 주기는 항상 15 * 10^k-1이다.
	 * 문제에서 M은 1,000,000이다.
	 * 따라서 주기는 항상 15 * 10^5 = 1,500,000
	 *
	 *
	 * */
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        long[] d = new long[1500000];
        d[0] = 0;
        d[1] = 1;
        for (int i=2; i<1500000; i++) {
            d[i] = d[i-1] + d[i-2];
            d[i] %= 1000000;
        }
        long n = sc.nextLong();
        System.out.println(d[(int)(n%1500000)]);
    }
}